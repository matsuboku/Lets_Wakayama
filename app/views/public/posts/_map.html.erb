<input id="address" type="textbox" placeholder="場所を探す">
<input type="button" value="検索" onclick="codeAddress()">
<p>マーカーをドラック＆ドロップで位置の調整ができます。<p>

<div id='map'></div>

<style>
#map {
  height: 600px;
  width: 100%;
}
</style>

<script>
//初期マップの設定
let map
let marker
function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 34.22611, lng:135.1675},  //和歌山
    zoom: 13,
    styles: [
              {
                featureType: "administrative",
                elementType: "labels.text.fill",
                stylers: [
                  {color: "#444444"}
                ]
              },

              {
                featureType: 'administrative.country',
                elementType: 'all',
                stylers: [
                  {visibility: 'off'},
                ]
              },

              {
                featureType: 'administrative.province',
                elementType: 'all',
                stylers: [
                  {visibility: 'off' },
                  {saturation: 50 },
                  {lightness: 0 }
                ]
              },

              {
                featureType: 'administrative.locality',
                elementType: 'all',
                stylers: [
                  {visibility: 'off' }
                ]
              },
              {
                featureType: 'administrative.neighborhood',
                elementType: 'all',
                stylers: [
                  {visibility: 'simplified' }
                ]
              },
              {
                featureType: 'landscape',
                elementType: 'all',
                stylers: [
                  {visibility: 'off' },
                  {color: "#ffffff"}
                ]
              },
              {
                featureType: 'landscape',
                elementType: 'labels',
                stylers: [
                  {visibility: 'off' }
                ]
              },
              {
                featureType: 'landscape.man_made',
                elementType: 'all',
                stylers: [
                  {visibility: 'off' }
                ]
              },
              {
                featureType: 'landscape.natural',
                elementType: 'geometry.fill',
                stylers: [
                  {saturation: 20 },
                  {visibility: "on"}
                ]
              },
              {
                featureType: 'landscape.natural',
                elementType: 'labels',
                stylers: [
                  {visibility: "off"}
                ]
              },
              {
                featureType: 'poi',
                elementType: 'all',
                stylers: [
                  {visibility: "off"}
                ]
              },
              {
                featureType: 'poi.park',
                elementType: 'all',
                stylers: [
                  {visibility: "on"},
                  {hue: "#91ff00"},
                  {lightness: 56},
                  {saturation: 26}
                ]
              },
              {
                featureType: 'road',
                elementType: 'all',
                stylers: [
                  {saturation: 50},
                  {lightness: 20},
                ]
              },
              {
                featureType: "road.highway",
                elementType: "all",
                stylers: [
                  {visibility: "simplified"}
                ]
              },
              {
                featureType: "road.highway",
                elementType: "geometry",
                stylers: [
                  {color: "#ffc489"}
                ]
              },
              {
                featureType: "road.highway",
                elementType: "labels",
                stylers: [
                  {visibility: "on"}
                ]
              },
              {
                featureType: "road.arterial",
                elementType: "all",
                stylers: [
                  {visibility: "on"}
                ]
              },
              {
                featureType: "road.arterial",
                elementType: "geometry.fill",
                stylers: [
                  {visibility: "off"}
                ]
              },
              {
                featureType: "road.arterial",
                elementType: "geometry.stroke",
                stylers: [
                  {visibility: "on"},
                  {color: "#ffc489"},
                  {lightness: 50}
                ]
              },
              {
                featureType: "road.arterial",
                elementType: "labels",
                stylers: [
                  {visibility: "off"}
                ]
              },
              {
                featureType: "road.local",
                elementType: "all",
                stylers: [
                  {visibility: "on"}
                ]
              },
              {
                featureType: "road.local",
                elementType: "geometry",
                stylers: [
                  {color: "#f3f3f3"},
                  {visibility: "simplified"}
                ]
              },
              {
                featureType: "road.local",
                elementType: "labels",
                stylers: [
                  {visibility: "off"}
                ]
              },
              {
                featureType: "transit",
                elementType: "labels.text.fill",
                stylers: [
                  {color: "#ffc489"},
                  {saturation: 50}
                ]
              },

              {
                featureType: "water",
                elementType: "all",
                stylers: [
                  {color: "#e9f6f8"},
                  {visibility: "on"}
                ]
              }
            ]
  });
}
//検索後のマップ作成
let geocoder
let aft
const  lat = document.getElementById('lat')
const  lng = document.getElementById('lng')
function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
      //マーカーが複数できないようにする
      if (aft == true){
          marker.setMap(null);
      }
      //新しくマーカーを作成する
      map.setCenter(results[0].geometry.location);
        marker = new google.maps.Marker({
        map: map,
        position: results[0].geometry.location,
        draggable: true // ドラッグ可能にする
      });
      //二度目以降か判断
      aft = true
      //検索した時に緯度経度を入力する
      document.getElementById('latitude').value = results[0].geometry.location.lat();
      document.getElementById('longitude').value = results[0].geometry.location.lng();
      lat.textContent = "緯度：" + results[ 0 ].geometry.location.lat();
      lng.textContent = "経度：" + results[ 0 ].geometry.location.lng();
      // マーカーのドロップ（ドラッグ終了）時のイベント
      google.maps.event.addListener( marker, 'dragend', function(ev){
        // イベントの引数evの、プロパティ.latLngが緯度経度
        document.getElementById('latitude').value = ev.latLng.lat();
        document.getElementById('longitude').value = ev.latLng.lng();
        lat.textContent = "緯度：" + ev.latLng.lat();
        lng.textContent = "経度：" + ev.latLng.lng();
      })
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });
}
</script>